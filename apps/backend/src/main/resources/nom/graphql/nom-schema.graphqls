scalar Date
scalar DateTime

type Query {
    organisasjonsenhet(where: OrganisasjonsenhetSearch): Organisasjonsenhet
    organisasjonsenheter(where: OrganisasjonsenheterSearch): [OrganisasjonsenhetResult!]!
    ressurs(where: RessursSearch): Ressurs
    ressurser(where: RessurserSearch): [RessursResult!]!
}

input OrganisasjonsenhetSearch {
    agressoId: String
}

input OrganisasjonsenheterSearch {
    agressoIder: [String!]
}

input RessursSearch {
    navIdent: String
    personIdent: String
}

input RessurserSearch {
    navIdenter: [String!]
    personIdenter: [String!]
}

type OrganisasjonsenhetResult {
    code: ResultCode!
    id: String!
    organisasjonsenhet: Organisasjonsenhet
}

type RessursResult {
    code: ResultCode!
    id: String!
    ressurs: Ressurs
}

enum ResultCode {
    OK,
    NOT_FOUND
}

type Organisasjonsenhet {
    agressoId: ID!
    navn: String!
    gyldigFom: Date!
    gyldigTom: Date
    organiseringer (retning: Retning) : [Organisering!]!
    leder: [OrganisasjonsenhetsLeder!]!
    koblinger: [OrganisasjonsenhetsKobling!]!
}

type Organisering {
    retning: Retning!
    organisasjonsenhet : Organisasjonsenhet!
    gyldigFom: Date!
    gyldigTom: Date
}

type Ressurs {
    nomId: String!
    navIdent: String!
    personIdent: String!
    koblinger: [RessursKobling!]!
    lederFor: [LederOrganisasjonsenhet!]!
    ledere: [RessursLeder!]!
    person: Person
    epost: String
    visningsNavn: String
    fornavn: String
    etternavn: String
}

type RessursLeder {
    ressurs: Ressurs!
}

type Person {
    navn: Navn!
}

type Navn {
    fornavn: String!
    mellomnavn: String
    etternavn: String!
}

type OrganisasjonsenhetsLeder {
    ressurs: Ressurs!
}

type LederOrganisasjonsenhet {
    organisasjonsenhet: Organisasjonsenhet!
}

type OrganisasjonsenhetsKobling {
    ressurs: Ressurs!
    gyldigFom: Date!
    gyldigTom: Date
}

type RessursKobling {
    organisasjonsenhet: Organisasjonsenhet!
    gyldigFom: Date!
    gyldigTom: Date
}

enum Retning {
    over,
    under,
}